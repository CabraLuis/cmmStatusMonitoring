// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // url      = env("DATABASE_URL")
  url      = "postgresql://testCMM:testCMM@localhost:5432/testCMM?schema=public"
}

// Se necesita una llave compuesta de workOrder y step para poder repetir valores de workOrders
model WorkOrder {
  workOrder     String
  stepId        Int
  partId        Int
  quantity      Int
  deliveredBy   Int
  startedAt     DateTime
  priorityId    Int
  statusId      Int
  estimatedTime Int
  rejected      Boolean
  timeDelayed   Int?

  partStatusRegistry WorkOrderRegistry[]

  status   Status   @relation(fields: [statusId], references: [id])
  area     Area     @relation(fields: [deliveredBy], references: [id])
  part     Part     @relation(fields: [partId], references: [id])
  step     Step     @relation(fields: [stepId], references: [id])
  priority Priority @relation(fields: [priorityId], references: [id])

  @@id([workOrder, stepId])
}

model Status {
  id     Int    @id @default(autoincrement())
  status String @unique

  workOrder          WorkOrder[]
  partStatusRegistry WorkOrderRegistry[]
}

model WorkOrderRegistry {
  id          Int      @id @default(autoincrement())
  workOrderId String
  stepId      Int
  statusId    Int
  startedAt   DateTime
  rejected    Boolean?
  elapsedTime Int?

  status Status @relation(fields: [statusId], references: [id])

  workOrder WorkOrder @relation(fields: [workOrderId, stepId], references: [workOrder, stepId])
}

model Area {
  id   Int    @id @default(autoincrement())
  area String @unique

  workOrder WorkOrder[]
}

model AuthorizedUser {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

model Part {
  id     Int    @id @default(autoincrement())
  number String @unique

  workOrder WorkOrder[]
}

model Step {
  id   Int @id @default(autoincrement())
  step Int @unique

  workOrder WorkOrder[]
}

model Priority {
  id       Int    @id @default(autoincrement())
  priority String @unique

  workOrder WorkOrder[]
}
